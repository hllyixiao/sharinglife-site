<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.sharinglife.mapper.ArticleMapper">

    <sql id="trim_field">
        <trim suffixOverrides=",">
            <if test="userId != null">userid,</if>
            <if test="title != null">title,</if>
            <if test="contentHtml != null">contenthtml,</if>
            <if test="displayContextTxt != null">displaycontexttxt,</if>
            <if test="contentSize != null">contentsize,</if>
            <if test="allowComments != null">allowcomments,</if>
            <if test="status != null">status,</if>
        </trim>
    </sql>
    <sql id="trim_data">
        <trim suffixOverrides=",">
            <if test="userId != null">#{userId,jdbcType=INTEGER},</if>
            <if test="title != null">#{title,jdbcType=VARCHAR},</if>
            <if test="contentHtml != null">#{contentHtml,jdbcType=VARCHAR},</if>
            <if test="displayContextTxt != null">#{displayContextTxt,jdbcType=VARCHAR},</if>
            <if test="contentSize != null">#{contentSize,jdbcType=INTEGER},</if>
            <if test="allowComments != null">#{allowComments,jdbcType=TINYINT},</if>
            <if test="status != null">#{status,jdbcType=TINYINT},</if>
        </trim>
    </sql>

    <sql id="update_data">
        <if test="contentHtml != null" >
            contenthtml = #{contentHtml,jdbcType=VARCHAR},
        </if>
        <if test="contentSize != null" >
            contentsize = #{contentSize,jdbcType=INTEGER},
        </if>
        <if test="status != null" >
            status = #{status,jdbcType=TINYINT},
        </if>
        <if test="allowComments != null" >
            allowcomments = #{allowComments,jdbcType=TINYINT},
        </if>
        <if test="displayContextTxt != null" >
            displaycontexttxt = #{displayContextTxt,jdbcType=VARCHAR},
        </if>
        <if test="title != null" >
            title = #{title,jdbcType=VARCHAR},
        </if>
    </sql>

    <sql id="article_table_all_columns">
        id,
        userid,
        title,
        contenthtml,
        contentsize,
        allowcomments,
        status,
        comments,
        likes,
        readvolumes,
        createtime,
        updatetime
    </sql>

    <sql id="article_table_display_columns">
        id AS articleId,
        userid,
        title,
        contenthtml,
        displaycontexttxt,
        contentsize,
        categoryid,
        allowcomments,
        comments,
        likes,
        readvolumes,
        updatetime
    </sql>

    <sql id="article_user_display_columns">
        a.id AS articleId,
        a.userid,
        a.title,
        a.contenthtml,
        a.displaycontexttxt,
        a.contentsize,
        a.allowcomments,
        a.comments,
        a.likes,
        a.readvolumes,
        a.updatetime,
        u.name AS userName,
        u.avatarurl
    </sql>

    <!--获取文章总数-->
    <select id="countArticle" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM `article`
        <where>
            <if test="status!=null">
                status=#{status}
            </if>
        </where>
    </select>

    <!--获得所有文章评论总数-->
    <select id="countArticleComment" resultType="java.lang.Integer">
        SELECT SUM(comments) FROM article
        <where>
            <if test="status!=null">
                status=#{status}
            </if>
        </where>
    </select>


    <!--获得阅读量总数-->
    <select id="countArticleRead" resultType="java.lang.Integer">
        SELECT SUM(reads) FROM article
        <where>
            <if test="status!=null">
                status=#{status}
            </if>
        </where>
    </select>

    <!--根据id查询文章信息-->
    <select id="getArticleById" resultType="articleVo">
        SELECT
        <include refid="article_table_all_columns"/>
        FROM
        `article`
        <where>
            id=#{articleId}
            <if test="status!=null">
                AND status=#{status}
            </if>
        </where>
    </select>

    <!--根据用户id获取文章信息-->
    <select id="getArticleByUserId" resultType="articleVo">
        SELECT
        <include refid="article_table_display_columns"/>
        FROM
        `article`
        <where>
            userid=#{userId}
            <if test="status!=null">
                AND status=#{status}
            </if>
        </where>
    </select>

    <!--在主页获取所有文章信息-->
    <select id="listArticles" resultType="articleVo">
        SELECT
        <include refid="article_user_display_columns"/>
        FROM
        `article` a LEFT JOIN `user` u
        ON a.userid = u.id
        <where>
            <if test="status!=null">
               a.status=#{status}
            </if>
        </where>
    </select>


    <update id="addLike">
        UPDATE article SET likes=likes+1 WHERE id=#{articleId}
    </update>

    <update id="addReadvolumes">
        UPDATE article SET readvolumes=readvolumes+1 WHERE id=#{articleId}
    </update>

    <update id="deleteLike">
        UPDATE article SET likes=likes-1 WHERE id=#{articleId}
    </update>

    <update id="addComment">
        UPDATE article SET comments=comments+1 WHERE id=#{articleId}
    </update>

    <update id="deleteComment">
        UPDATE article SET comments=comments-1 WHERE id=#{articleId}
    </update>

    <insert id="addArticle" parameterType="article" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO article (
        <include refid="trim_field"/>
        )
        VALUES (
        <include refid="trim_data"/>
        )
    </insert>

    <update id="updateArticle" parameterType="article">
        UPDATE article
        <set>
            <include refid="update_data"/>
        </set>
        where id = #{id}
    </update>

    <update id="deleteArticleByIds" parameterType="list">
        UPDATE article SET status= #{status} WHERE id IN
        <foreach collection="articleIds" item="articleId" open="(" separator="," close=")">
            #{articleId}
        </foreach>
    </update>

    <delete id="thoroughDeleteArticleByIds" parameterType="list">
        DELETE FROM article WHERE id IN
        <foreach collection="articleIds" item="articleId" open="(" separator="," close=")">
            #{articleId}
        </foreach>
    </delete>

    <select id="countLikesCommentsReadvolumesContentsize">
        select sum(likes) As likesAll,
               sum(comments) AS commentsAll,
               sum(readvolumes) AS readvolumesAll,
               sum(contentsize) As contentsizeAll
        from `article`
        <where>
            userid=#{userId}
            <if test="status!=null">
                AND status=#{status}
            </if>
        </where>
    </select>
</mapper>