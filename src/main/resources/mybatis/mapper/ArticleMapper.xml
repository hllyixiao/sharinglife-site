<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.sharinglife.mapper.ArticleMapper" >

    <sql id="trim_field">
        <trim suffixOverrides=",">
            <if test="userId != null">userid,</if>
            <if test="title != null">title,</if>
            <if test="contentHtml != null">contenthtml,</if>
            <if test="contentSize != null">contentsize,</if>
            <if test="categoryId != null">categoryid,</if>
            <if test="allowComments != null">allowcomments,</if>
            <if test="status != null">status,</if>
            <if test="comments != null">comments,</if>
            <if test="likes != null">likes,</if>
            <if test="readVolumes != null">readvolumes,</if>
        </trim>
    </sql>
    <sql id="trim_data">
        <trim suffixOverrides=",">
            <if test="userId != null">#{userId,jdbcType=INTEGER},</if>
            <if test="title != null">#{title,jdbcType=VARCHAR},</if>
            <if test="contentHtml != null">#{contentHtml,jdbcType=VARCHAR},</if>
            <if test="contentSize != null">#{contentSize,jdbcType=INTEGER},</if>
            <if test="categoryId != null">#{categoryId,jdbcType=INTEGER},</if>
            <if test="allowComments != null">#{allowComments,jdbcType=TINYINT},</if>
            <if test="status != null">#{status,jdbcType=TINYINT},</if>
            <if test="comments != null">#{comments,jdbcType=INTEGER},</if>
            <if test="likes != null">#{likes,jdbcType=INTEGER},</if>
            <if test="readVolumes != null">#{readVolumes,jdbcType=INTEGER},</if>
        </trim>
    </sql>

    <sql id="article_table_all_columns">
        id,
        userid,
        title,
        contenthtml,
        contentsize,
        categoryid,
        allowcomments,
        status,
        comments,
        likes,
        readvolumes,
        createtime,
        updatetime
    </sql>

    <sql id="article_table_display_columns">
        id AS articleId,
        userid,
        title,
        contenthtml,
        SUBSTRING(contenttxt,1,30) AS displayContextTxt,
        contentsize,
        categoryid,
        allowcomments,
        comments,
        likes,
        readvolumes,
        updatetime
    </sql>

    <!--获取文章总数-->
    <select id="countArticle" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM `article`
        <where>
            <if test="status!=null">
                status=#{status}
            </if>
        </where>
    </select>

    <!--获得所有文章评论总数-->
    <select id="countArticleComment" resultType="java.lang.Integer">
        SELECT SUM(comments) FROM article
        <where>
            <if test="status!=null">
                status=#{status}
            </if>
        </where>
    </select>


    <!--获得阅读量总数-->
    <select id="countArticleRead" resultType="java.lang.Integer">
        SELECT SUM(reads) FROM article
        <where>
            <if test="status!=null">
                status=#{status}
            </if>
        </where>
    </select>

    <!--根据id查询文章信息-->
    <select id="getArticleById" resultType="article">
        SELECT
        <include refid="article_table_all_columns"/>
        FROM
        `article`
        <where>
            id=#{articleId}
        </where>
    </select>

    <!--根据用户id获取文章信息-->
    <select id="getArticleByUserId" resultType="articleResponse">
        SELECT
        <include refid="article_table_display_columns"/>
        FROM
        `article`
        <where>
            <if test="status!=null">
                status=#{status} AND
            </if>
            userid=#{userId}
        </where>
    </select>

    
    <update id="addLike">
    UPDATE article SET likes=likes+1 WHERE id=#{articleId}
    </update>

    <update id="deleteLike">
    UPDATE article SET likes=likes-1 WHERE id=#{articleId}
    </update>

    <update id="addComment">
    UPDATE article SET comments=comments+1 WHERE id=#{articleId}
    </update>

    <update id="deleteComment">
    UPDATE article SET comments=comments-1 WHERE id=#{articleId}
    </update>

    <insert id="addArticle" parameterType="article" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO article (
        <include refid="trim_field"/>
        )
        VALUES (
        <include refid="trim_data"/>
        )
    </insert>

    <update id="deleteArticleByIds" parameterType="list">
        UPDATE article SET status= #{status} WHERE id IN
        <foreach collection="articleIds" item="articleId" open="(" separator="," close=")">
            #{articleId}
        </foreach>
    </update>

    <delete id="thoroughDeleteArticleByIds" parameterType="list">
        DELETE FROM article WHERE id IN
        <foreach collection="articleIds" item="articleId" open="(" separator="," close=")">
            #{articleId}
        </foreach>
    </delete>
</mapper>